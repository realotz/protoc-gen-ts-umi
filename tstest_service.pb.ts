// @ts-ignore
/* eslint-disable */
// Code generated by protoc-gen-ts-umi. DO NOT EDIT.
import {request} from 'umi';

const APIService = '/api';
// This is a compile-time assertion to ensure that this generated file
// is compatible with the kratos package it is being compiled against.

type Options = {
  [key: string]: any
}

/** CheckInfo  /api */
export async function CheckInfo(params: RealotzApiV1.Request, options?: Options) {
	return request<RealotzApiV1.Response>(APIService + '/cratos.api.v1.test/CheckInfo', {
    	method: 'GET',
    	params: {...params},
    	...(options || {}),
	});
}

/** GetGatewayList  gateway列表 /api */
export async function GetGatewayList(params: RealotzApiV1.ListOption, options?: Options) {
	return request<RealotzApiV1.GatewayList>(APIService + '/cratos.api.v1.test/GetGatewayList', {
    	method: 'GET',
    	params: {...params},
    	...(options || {}),
	});
}

/** GetGateway  获取gateway /api */
export async function GetGateway(params: RealotzApiV1.GetKind, options?: Options) {
	return request<RealotzApiV1.Gateway>(APIService + '/cratos.api.v1.test/GetGateway', {
    	method: 'GET',
    	params: {...params},
    	...(options || {}),
	});
}

/** CreateGateway  创建 Gateway /api */
export async function CreateGateway(params: RealotzApiV1.Gateway, options?: Options) {
	return request<RealotzApiV1.Response>(APIService + '/cratos.api.v1.test/CreateGateway', {
    	method: 'POST',
		headers: {'Content-Type': 'application/json',},
    	data: {...params},
    	...(options || {}),
	});
}

/** UpdateGateway  更新 Gateway /api */
export async function UpdateGateway(params: RealotzApiV1.Gateway, options?: Options) {
	return request<RealotzApiV1.Response>(APIService + '/cratos.api.v1.test/UpdateGateway', {
    	method: 'POST',
		headers: {'Content-Type': 'application/json',},
    	data: {...params},
    	...(options || {}),
	});
}

/** DeleteGateway  删除gateway /api */
export async function DeleteGateway(params: RealotzApiV1.DeleteKind, options?: Options) {
	return request<RealotzApiV1.Response>(APIService + '/cratos.api.v1.test/DeleteGateway', {
    	method: 'DELETE',
    	params: {...params},
    	...(options || {}),
	});
}

